@model List<iCONEXTWorkShop.ViewModels.AllProductViewModel>
@{
    ViewBag.Title = "Home";
    var categoryId = ViewData["CategoryId"];
    var pageAmount = Math.Ceiling((float)(Model.Count / 8.0));
    var allProduct = Model.Count;
    int showPerPage = 8;
    string display = "none";
    int index = 0;
    string productString = "product";
}
<div class="container">
    <ul class="bxslider">
        <li><img src="~/Content/images/Slide/slide1.jpg" /></li>
        <li><img src="~/Content/images/Slide/slide2.jpg" /></li>
        <li><img src="~/Content/images/Slide/slide3.jpg" /></li>
        <li><img src="~/Content/images/Slide/slide4.jpg" /></li>
    </ul>

    <div class="col-md-12">
        <div class="row">
            @foreach (var product in Model)
            {
                index = Model.IndexOf(product);
                var idProduct = productString + (index.ToString());

                <div class="col-md-3" style="display: @display" id=@idProduct>
                    <div class="form-group" style="margin: 5px auto; padding: 0 35px 20px 20px;">
                        <div class="book">
                            <a href="@Url.Action("Index/" + product.Id, "BookDetail")">
                                <img alt="book1" src="@product.Image" width="100%" height="220px">
                            </a>
                        </div>
                    </div>
                    <p class="text-center" style="white-space: nowrap; overflow: hidden">
                        <strong><a href="@Url.Action("Index/" + product.Id, "BookDetail")">@product.Title</a></strong>
                    </p>
                    <p class="text-center">
                        <strong>@product.Price Baht</strong>
                    </p>
                    <div class="form-group text-center">
                        @if (product.Balance > 0)
                        {
                            @Html.TextBox("Amount", null, new { id = "amount_" + product.Id, @class = "form-control product-amount text-center", type = "number", min = "1", max = product.Balance, @Value = "1", style = "max-width: 80px; margin: 5px auto" })
                        }
                        else
                        {
                            <div style="color: lightcoral; padding-bottom: 14px;">ขออภัยสินค้าหมด</div>
                        }
                    </div>
                    <div class="form-group text-center">
                        @if (product.Balance > 0)
                        {
                            <button class="btn btn-primary text-center" style="width: 95px; padding-left: 5px; padding-right: 5px" onclick="ajaxAddData(@product.Id, $('#amount_' + @product.Id).val())">Add to Cart</button>
                        }
                        else
                        {
                            <button class="btn btn-primary text-center disabled" style="width: 95px; padding-left: 5px; padding-right: 5px" onclick="ajaxAddData(@product.Id, $('#amount_' + @product.Id).val())">Add to Cart</button>
                        }
                        <a class="btn btn-default text-center" href="@Url.Action("Index/" + product.Id, "BookDetail")" style="width: 95px">View</a>
                    </div>
                </div>
            }
            @if (allProduct == 0)
            {
                <center>
                    <h1 class="text-danger"><i class="fa fa-exclamation fa-2x"></i> Product Not Found</h1>
                </center>
            }
        </div>
    </div>

    <center>
        <ul id="pagination-demo" class="pagination-sm"></ul>
    </center>
</div>
@section scripts
    {
    <script type="text/javascript">

        function ajaxAddData(productId, quantity) {
            $.ajax({
                url: '@Url.Action("Cart", "Home")',
                type: 'POST',
                dataType: 'json',
                data: {ProductId: productId, Quantity: quantity},
            })
             .done(function(data) {
                 if (data.StatusCode == '200') {
                     new PNotify({
                         title: 'Status',
                         text: data.Message,
                         icon: 'glyphicon glyphicon-envelope',
                         type: 'success'
                     });
                     getCartStatus();
                 }
                 else
                 {
                     new PNotify({
                         title: 'Status',
                         text: data.Message,
                         icon: 'glyphicon glyphicon-envelope',
                         type: 'error'
                     });
                 }
             })
             .fail(function() {
                 console.log("ajax_login error");
                 new PNotify({
                     title: 'Status',
                     text: 'Please Login Before Shopping!',
                     icon: 'glyphicon glyphicon-envelope',
                     type: 'error'
                 });
             })
             .always(function() {
                 console.log("ajax_login complete");
             });
        }

        $(document).ready(function(){
            $('.bxslider').bxSlider ({
                auto: true
            });

            $('#pagination-demo').twbsPagination({
                totalPages: @pageAmount,
                visiblePages: 10,
                onPageClick: function (event, page) {
                    $('#page-content').text('Page ' + page);
                    for (var i = 0; i < @allProduct; i++) {
                        $("#product" + i).css("display", "none");
                    }
                    for (var i = (page*@showPerPage) - 1 ; i > ((page*@showPerPage) - 1) - @showPerPage ; i--) {
                        $("#product" + i).css("display", "inline");
                    }
                }
            });

        });
    </script>
}